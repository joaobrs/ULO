#Î¼LO

A linear optics simulator in one file. Still a work in progress.

You will need [Python27](https://www.python.org/download/releases/2.7/) and [numpy](http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpy)

Circuits are described in JSON format. A [tool](http://github.com/peteshadbolt/lojs) to rapidly design and test circuits is on the way.

```python
>>> import linear_optics as lo
>>> circuit = [{'type': 'bellpair', 'pos': {'x': 0, 'y': 0}},
               {'type': 'sps', 'pos': {'x': 0, 'y': 5}},
               {'type': 'phaseshifter', 'pos': {'x': 2, 'y': 0}, 'phase':0},
               {'type': 'coupler', 'pos': {'x': 2, 'y': 1}, 'ratio': 0.5},
               {'type': 'coupler', 'pos': {'x': 3, 'y': 1}, 'ratio': 0.5},
               {'type': 'crossing', 'pos': {'x': 2, 'y': 2}},
               {'type': 'crossing', 'pos': {'x': 4, 'y': 4}}]
>>> circuit = lo.compile(circuit)
>>> pprint(circuit)
{'input_state': defaultdict(<type 'complex'>, {(1, 3, 5): 0.70710678118654746,
                                               (0, 2, 5): 0.70710678118654746}),
 'nmodes': 6, 'nphotons': 3, 'patterns': [(0, 0, 0), (0, 0, 1), (0, 0, 2), ... (5, 5, 5)],
 'unitary': array([[ 1.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j,  0.+0.j],
                   [ 0.+0.j,  0.+0.j,  0.+1.j,  0.+0.j,  0.+0.j,  0.+0.j],
                   ...
                   [ 0.+0.j,  0.+0.j,  0.+0.j,  1.+0.j,  0.+0.j,  0.+0.j]])}
>>> output_state = lo.simulate(**circuit)
>>> ["|%s> - %.3f" % t for t in output_state.items() if t[1]>0]
[((3, 3, 4), 0.25), ((0, 2, 4), 0.49999999999999989), ((1, 1, 4), 0.25)]
```
